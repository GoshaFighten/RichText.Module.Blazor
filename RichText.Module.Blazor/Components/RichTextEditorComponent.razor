@using Microsoft.JSInterop
@using RichText.Module.Blazor.Components.Models
@implements IAsyncDisposable
@inject IJSRuntime JSRuntime

<div id=@Id></div>

@code {
    public static RenderFragment Create(RichTextEditorComponentModel componentModel) => @<RichTextEditorComponent ComponentModel=componentModel />;

    public RichTextEditorComponent() {
        Id = "rich-container-" + Guid.NewGuid().ToString();
    }
    string Id { get; }
    [Parameter]
    public RichTextEditorComponentModel ComponentModel { get; set; }
    
    protected async override Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            await JSRuntime.InvokeVoidAsync("RichTextEditorComponent.Init", Id, ComponentModel.ReadOnly, ComponentModel.Value,  DotNetObjectReference.Create(this));
        } else {
            await JSRuntime.InvokeVoidAsync("RichTextEditorComponent.OpenDocument", Id, ComponentModel.Value);
        }
    }
    [JSInvokable]
    public Task SaveDocument(string document) {
        ComponentModel.SetValueFromUI(document);
        return Task.CompletedTask;
    }
    async ValueTask IAsyncDisposable.DisposeAsync() {
        await JSRuntime.InvokeVoidAsync("RichTextEditorComponent.Dispose", Id);
    }
}